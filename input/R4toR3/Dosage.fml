/// url = "http://hl7.org/fhir/StructureMap/Dosage4to3"
/// name = "Dosage4to3"
/// title = "Dosage Transforms: R4 to R3"
/// status = "active"

uses "http://hl7.org/fhir/4.0/Dosage" alias Dosage as source
uses "http://hl7.org/fhir/3.0/Dosage" alias DosageR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group Dosage(source src : Dosage, target tgt : DosageR3) extends BackboneElement <<type+>> {
  src.sequence -> tgt.sequence;
  src.text -> tgt.text;
  src.additionalInstruction -> tgt.additionalInstruction;
  src.patientInstruction -> tgt.patientInstruction;
  src.timing -> tgt.timing;
  src.asNeeded : boolean as vs -> tgt.asNeeded = create('boolean') as vt then boolean(vs, vt) "asNeededBoolean";
  src.asNeeded : CodeableConcept as vs -> tgt.asNeeded = create('CodeableConcept') as vt then CodeableConcept(vs, vt) "asNeededCodeableConcept";
  src.site -> tgt.site;
  src.route -> tgt.route;
  src.method -> tgt.method;
  src.doseAndRate as vs0 then doseAndRate(vs0, tgt);
  src.maxDosePerPeriod -> tgt.maxDosePerPeriod;
  src.maxDosePerAdministration -> tgt.maxDosePerAdministration;
  src.maxDosePerLifetime -> tgt.maxDosePerLifetime;
}

group doseAndRate(source src, target tgt) {
  src.dose : Range as vs -> tgt.dose = create('Range') as vt then Range(vs, vt) "doseRange";
  src.dose : Quantity as vs -> tgt.dose = create('Quantity') as vt then Quantity(vs, vt) "doseQuantity";
  src.rate : Ratio as vs -> tgt.rate = create('Ratio') as vt then Ratio(vs, vt) "rateRatio";
  src.rate : Range as vs -> tgt.rate = create('Range') as vt then Range(vs, vt) "rateRange";
  src.rate : Quantity as vs -> tgt.rate = create('Quantity') as vt then Quantity(vs, vt) "rateQuantity";
}

