/// url = "http://hl7.org/fhir/uv/xver/StructureMap/SpecimenDefinition4Bto5"
/// name = "SpecimenDefinition4Bto5"
/// title = "SpecimenDefinition Transforms: R4B to R5"
/// status = "active"

uses "http://hl7.org/fhir/4.3/StructureDefinition/SpecimenDefinition" alias SpecimenDefinitionR4B as source
uses "http://hl7.org/fhir/5.0/StructureDefinition/SpecimenDefinition" alias SpecimenDefinitionR5 as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*4Bto5"

group SpecimenDefinition(source src : SpecimenDefinitionR4B, target tgt : SpecimenDefinitionR5) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.typeCollected -> tgt.typeCollected;
  src.patientPreparation -> tgt.patientPreparation;
  src.timeAspect -> tgt.timeAspect;
  src.collection -> tgt.collection;
  src.typeTested as s -> tgt.typeTested as t then SpecimenDefinitionTypeTested(s, t);
}

group SpecimenDefinitionTypeTested(source src, target tgt) extends BackboneElement {
  src.isDerived -> tgt.isDerived;
  src.type -> tgt.type;
  src.preference as v -> tgt.preference = translate(v, 'http://hl7.org/fhir/uv/xver/ConceptMap/spdf.ty.preference-4bto5', 'code');
  src.container as s -> tgt.container as t then SpecimenDefinitionTypeTestedContainer(s, t);
  src.requirement -> tgt.requirement;
  src.retentionTime -> tgt.retentionTime;
  src.rejectionCriterion -> tgt.rejectionCriterion;
  src.handling as s -> tgt.handling as t then SpecimenDefinitionTypeTestedHandling(s, t);
}

group SpecimenDefinitionTypeTestedContainer(source src, target tgt) extends BackboneElement {
  src.material -> tgt.material;
  src.type -> tgt.type;
  src.cap -> tgt.cap;
  src.description -> tgt.description;
  src.capacity -> tgt.capacity;
  src.minimumVolume : Quantity -> tgt.minimumVolume "minimumVolumeQuantity";
  src.minimumVolume : string -> tgt.minimumVolume "minimumVolumeString";
  src.additive as s -> tgt.additive as t then SpecimenDefinitionTypeTestedContainerAdditive(s, t);
  src.preparation -> tgt.preparation;
}

group SpecimenDefinitionTypeTestedContainerAdditive(source src, target tgt) extends BackboneElement {
  src.additive : CodeableConcept -> tgt.additive "additiveCodeableConcept";
  src.additive : Reference -> tgt.additive "additiveReference";
}

group SpecimenDefinitionTypeTestedHandling(source src, target tgt) extends BackboneElement {
  src.temperatureQualifier -> tgt.temperatureQualifier;
  src.temperatureRange -> tgt.temperatureRange;
  src.maxDuration -> tgt.maxDuration;
  src.instruction -> tgt.instruction;
}

