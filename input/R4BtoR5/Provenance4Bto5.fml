/// url = "http://hl7.org/fhir/uv/xver/StructureMap/Provenance4Bto5"
/// name = "Provenance4Bto5"
/// title = "Provenance Transforms: R4B to R5"
/// status = "active"

uses "http://hl7.org/fhir/4.3/StructureDefinition/Provenance" alias ProvenanceR4B as source
uses "http://hl7.org/fhir/5.0/StructureDefinition/Provenance" alias ProvenanceR5 as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*4Bto5"

group Provenance(source src : ProvenanceR4B, target tgt : ProvenanceR5) extends DomainResource <<type+>> {
  src.target -> tgt.target;
  src.occurred : Period -> tgt.occurred "occurredPeriod";
  src.occurred : dateTime -> tgt.occurred "occurredDateTime";
  src.recorded -> tgt.recorded;
  src.policy -> tgt.policy;
  src.location -> tgt.location;
  src.activity -> tgt.activity;
  src.agent as s -> tgt.agent as t then ProvenanceAgent(s, t);
  src.entity as s -> tgt.entity as t then ProvenanceEntity(s, t);
  src.signature -> tgt.signature;
}

group ProvenanceAgent(source src, target tgt) extends BackboneElement {
  src.type -> tgt.type;
  src.role -> tgt.role;
  src.who -> tgt.who;
  src.onBehalfOf -> tgt.onBehalfOf;
}

group ProvenanceEntity(source src, target tgt) extends BackboneElement {
  src.role as v -> tgt.role = translate(v, 'http://hl7.org/fhir/uv/xver/ConceptMap/prv.en.role-4bto5', 'code');
  src.what -> tgt.what;
  src.agent as s -> tgt.agent as t then ProvenanceAgent(s, t);
}

