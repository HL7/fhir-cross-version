/// url = "http://hl7.org/fhir/uv/xver/StructureMap/Bundle5to4"
/// name = "Bundle5to4"
/// title = "Bundle Transforms: R5 to R4"
/// status = "active"

uses "http://hl7.org/fhir/5.0/StructureDefinition/Bundle" alias BundleR5 as source
uses "http://hl7.org/fhir/4.0/StructureDefinition/Bundle" alias BundleR4 as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*5to4"

group Bundle(source src : BundleR5, target tgt : BundleR4) extends Resource <<type+>> {
  src.identifier -> tgt.identifier;
  src.type as v -> tgt.type = translate(v, 'http://hl7.org/fhir/uv/xver/ConceptMap/bdl.type-5to4', 'code');
  src.timestamp -> tgt.timestamp;
  src.total -> tgt.total;
  src.link as s -> tgt.link as t then BundleLink(s, t);
  src.entry as s -> tgt.entry as t then BundleEntry(s, t);
  src.signature -> tgt.signature;
}

group BundleLink(source src, target tgt) extends BackboneElement {
  src.relation -> tgt.relation;
  src.url -> tgt.url;
}

group BundleEntry(source src, target tgt) extends BackboneElement {
  src.link as s -> tgt.link as t then BundleLink(s, t);
  src.fullUrl -> tgt.fullUrl;
  src.resource : Resource -> tgt.resource "resourceResource";
  src.search as s -> tgt.search as t then BundleEntrySearch(s, t);
  src.request as s -> tgt.request as t then BundleEntryRequest(s, t);
  src.response as s -> tgt.response as t then BundleEntryResponse(s, t);
}

group BundleEntrySearch(source src, target tgt) extends BackboneElement {
  src.mode as v -> tgt.mode = translate(v, 'http://hl7.org/fhir/uv/xver/ConceptMap/bdl.en.se.mode-5to4', 'code');
  src.score -> tgt.score;
}

group BundleEntryRequest(source src, target tgt) extends BackboneElement {
  src.method as v -> tgt.method = translate(v, 'http://hl7.org/fhir/uv/xver/ConceptMap/bdl.en.re.method-5to4', 'code');
  src.url -> tgt.url;
  src.ifNoneMatch -> tgt.ifNoneMatch;
  src.ifModifiedSince -> tgt.ifModifiedSince;
  src.ifMatch -> tgt.ifMatch;
  src.ifNoneExist -> tgt.ifNoneExist;
}

group BundleEntryResponse(source src, target tgt) extends BackboneElement {
  src.status -> tgt.status;
  src.location -> tgt.location;
  src.etag -> tgt.etag;
  src.lastModified -> tgt.lastModified;
  src.outcome : Resource -> tgt.outcome "outcomeResource";
}

