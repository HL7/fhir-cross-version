/// url = "http://hl7.org/fhir/uv/xver/StructureMap/SubstanceDefinition5to4"
/// name = "SubstanceDefinition5to4"
/// title = "SubstanceDefinition Transforms: R5 to R4"
/// status = "active"

uses "http://hl7.org/fhir/5.0/SubstanceDefinition" alias SubstanceDefinitionR5 as source
uses "http://hl7.org/fhir/4.0/SubstanceSpecification" alias SubstanceSpecificationR4 as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*5to4"

group SubstanceDefinition(source src : SubstanceDefinitionR5, target tgt : SubstanceSpecificationR4) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.status -> tgt.status;
  src.domain -> tgt.domain;
  src.description -> tgt.description;
  src.note -> tgt.comment;
  src.moiety as s -> tgt.moiety as t then SubstanceDefinitionMoiety(s, t);
  src.property as s -> tgt.property as t then SubstanceDefinitionProperty(s, t);
  src.referenceInformation -> tgt.referenceInformation;
  src.structure as s -> tgt.structure as t then SubstanceDefinitionStructure(s, t);
  src.code as s -> tgt.code as t then SubstanceDefinitionCode(s, t);
  src.name as s -> tgt.name as t then SubstanceDefinitionName(s, t);
  src.relationship as s -> tgt.relationship as t then SubstanceDefinitionRelationship(s, t);
  src.nucleicAcid -> tgt.nucleicAcid;
  src.polymer -> tgt.polymer;
  src.protein -> tgt.protein;
}

group SubstanceDefinitionMoiety(source src, target tgt) extends BackboneElement {
  src.role -> tgt.role;
  src.identifier -> tgt.identifier;
  src.name -> tgt.name;
  src.stereochemistry -> tgt.stereochemistry;
  src.opticalActivity -> tgt.opticalActivity;
  src.molecularFormula -> tgt.molecularFormula;
  src.amount : Quantity -> tgt.amount "amountQuantity";
  src.amount : string -> tgt.amount "amountString";
}

// group SubstanceDefinitionCharacterization(source src, target tgt) extends BackboneElement {
// src.technique -> tgt.technique;
// src.form -> tgt.form;
// src.description -> tgt.description;
// src.file -> tgt.file;
// }
group SubstanceDefinitionProperty(source src, target tgt) extends BackboneElement {
  src.type -> tgt.code;
  src.value : Quantity -> tgt.amount "valueQuantity";
}

group SubstanceDefinitionMolecularWeight(source src, target tgt) extends BackboneElement {
  src.method -> tgt.method;
  src.type -> tgt.type;
  src.amount -> tgt.amount;
}

group SubstanceDefinitionStructure(source src, target tgt) extends BackboneElement {
  src.stereochemistry -> tgt.stereochemistry;
  src.opticalActivity -> tgt.opticalActivity;
  src.molecularFormula -> tgt.molecularFormula;
  src.molecularFormulaByMoiety -> tgt.molecularFormulaByMoiety;
  src.molecularWeight as s ->  tgt.isotope as t,  t.molecularWeight as tm then SubstanceDefinitionMolecularWeight(s, tm);
  src.sourceDocument -> tgt.source;
  src.representation as s -> tgt.representation as t then SubstanceDefinitionStructureRepresentation(s, t);
}

group SubstanceDefinitionStructureRepresentation(source src, target tgt) extends BackboneElement {
  src.type -> tgt.type;
  src.representation -> tgt.representation;
}

group SubstanceDefinitionCode(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.status -> tgt.status;
  src.statusDate -> tgt.statusDate;
  src.note -> tgt.comment;
  src.source -> tgt.source;
}

group SubstanceDefinitionName(source src, target tgt) extends BackboneElement {
  src.name -> tgt.name;
  src.type -> tgt.type;
  src.status -> tgt.status;
  src.preferred -> tgt.preferred;
  src.language -> tgt.language;
  src.domain -> tgt.domain;
  src.jurisdiction -> tgt.jurisdiction;
  src.official as s -> tgt.official as t then SubstanceDefinitionNameOfficial(s, t);
  src.source -> tgt.source;
}

group SubstanceDefinitionNameOfficial(source src, target tgt) extends BackboneElement {
  src.authority -> tgt.authority;
  src.status -> tgt.status;
  src.date -> tgt.date;
}

group SubstanceDefinitionRelationship(source src, target tgt) extends BackboneElement {
  src.substanceDefinition : Reference -> tgt.substance "substanceDefinitionReference";
  src.substanceDefinition : CodeableConcept -> tgt.substance "substanceDefinitionCodeableConcept";
  src.type -> tgt.relationship;
  src.isDefining -> tgt.isDefining;
  src.amount : Quantity -> tgt.amount "amountQuantity";
  src.amount : Ratio -> tgt.amount "amountRatio";
  src.amount : string -> tgt.amount "amountString";
  src.comparator -> tgt.amountType;
  src.source -> tgt.source;
}

