/// url = "http://hl7.org/fhir/uv/xver/StructureMap/Substance5to4b"
/// name = "Substance5to4b"
/// title = "Substance Transforms: R5 to R4B"
/// status = "active"

uses "http://hl7.org/fhir/5.0/StructureDefinition/Substance" alias SubstanceR5 as source
uses "http://hl7.org/fhir/4.3/StructureDefinition/Substance" alias SubstanceR4B as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*5to4b"

group Substance(source src : SubstanceR5, target tgt : SubstanceR4B) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.instance; // The instance property is not the same as the one in R4
  src.status as v -> tgt.status = translate(v, 'http://hl7.org/fhir/uv/xver/ConceptMap/sub.status-5to4b', 'code');
  src.category -> tgt.category;
  src.code -> tgt.code;
  src.description -> tgt.description;
  src.expiry as s ->  tgt.instance as t,  t.expiry = s;
  src.quantity as s ->  tgt.instance as t,  t.quantity = s;
  src where (expiry.exists() or quantity.exists()) -> tgt.instance as t then {
    src.expiry -> t.expiry;
    src.quantity -> t.quantity;
  };
  src.ingredient as s -> tgt.ingredient as t then SubstanceIngredient(s, t);
}

group SubstanceIngredient(source src, target tgt) extends BackboneElement {
  src.quantity -> tgt.quantity;
  src.substance : CodeableConcept -> tgt.substance "substanceCodeableConcept";
  src.substance : Reference -> tgt.substance "substanceReference";
}

