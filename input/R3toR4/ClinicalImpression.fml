/// url = "http://hl7.org/fhir/uv/xver/StructureMap/ClinicalImpression3to4"
/// name = "ClinicalImpression3to4"
/// title = "ClinicalImpression Transforms: R3 to R4"
/// status = "active"

uses "http://hl7.org/fhir/3.0/StructureDefinition/ClinicalImpression" alias ClinicalImpressionR3 as source
uses "http://hl7.org/fhir/4.0/StructureDefinition/ClinicalImpression" alias ClinicalImpression as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*3to4"

group ClinicalImpression(source src : ClinicalImpressionR3, target tgt : ClinicalImpression) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.status as v -> tgt.status = translate(v, 'http://hl7.org/fhir/uv/xver/ConceptMap/cli.status-3to4', 'code');
  src.code -> tgt.code;
  src.description -> tgt.description;
  src.subject -> tgt.subject;
  src.context -> tgt.encounter;
  src.effective : dateTime as vs -> tgt.effective = create('dateTime') as vt then dateTime(vs, vt) "effectiveDateTime";
  src.effective : Period as vs -> tgt.effective = create('Period') as vt then Period(vs, vt) "effectivePeriod";
  src.date -> tgt.date;
  src.assessor -> tgt.assessor;
  src.previous -> tgt.previous;
  src.problem -> tgt.problem;
  src.investigation as vs0 -> tgt.investigation as vt0 then investigation(vs0, vt0);
  src.protocol -> tgt.protocol;
  src.summary -> tgt.summary;
  src.finding as vs0 -> tgt.finding as vt0 then finding(vs0, vt0);
  src.prognosisCodeableConcept -> tgt.prognosisCodeableConcept;
  src.prognosisReference -> tgt.prognosisReference;
  src.action as v ->  tgt.extension as vt,  vt.url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-ClinicalImpression.action',  vt.value = v;
  src.note -> tgt.note;
}

group investigation(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.item -> tgt.item;
}

group finding(source src, target tgt) extends BackboneElement {
  src.item : CodeableConcept as vs -> tgt.itemCodeableConcept as vt then CodeableConcept(vs, vt) "itemCodeableConcept";
  src.item : Reference as vs -> tgt.itemReference as vt then Reference(vs, vt) "itemReference";
  src.basis -> tgt.basis;
}

