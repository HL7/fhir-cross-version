/// url = "http://hl7.org/fhir/uv/xver/StructureMap/ValueSet4Bto5"
/// name = "ValueSet4Bto5"
/// title = "ValueSet Transforms: R4B to R5"
/// status = "active"

uses "http://hl7.org/fhir/4.3/ValueSet" alias ValueSetR4B as source
uses "http://hl7.org/fhir/5.0/ValueSet" alias ValueSetR5 as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*4Bto5"

group ValueSet(source src : ValueSetR4B, target tgt : ValueSetR5) extends DomainResource <<type+>> {
  src.url -> tgt.url;
  src.identifier -> tgt.identifier;
  src.version -> tgt.version;
  src.name -> tgt.name;
  src.title -> tgt.title;
  src.status as v -> tgt.status = translate(v, 'http://hl7.org/fhir/uv/xver/ConceptMap/vsd.status-4bto5', 'code');
  src.experimental -> tgt.experimental;
  src.date -> tgt.date;
  src.publisher -> tgt.publisher;
  src.contact -> tgt.contact;
  src.description -> tgt.description;
  src.useContext -> tgt.useContext;
  src.jurisdiction -> tgt.jurisdiction;
  src.immutable -> tgt.immutable;
  src.purpose -> tgt.purpose;
  src.copyright -> tgt.copyright;
  src.compose as s -> tgt.compose as t then ValueSetCompose(s, t);
  src.expansion as s -> tgt.expansion as t then ValueSetExpansion(s, t);
}

group ValueSetCompose(source src, target tgt) extends BackboneElement {
  src.lockedDate -> tgt.lockedDate;
  src.inactive -> tgt.inactive;
  src.include as s -> tgt.include as t then ValueSetComposeInclude(s, t);
}

group ValueSetComposeInclude(source src, target tgt) extends BackboneElement {
  src.system -> tgt.system;
  src.version -> tgt.version;
  src.concept as s -> tgt.concept as t then ValueSetComposeIncludeConcept(s, t);
  src.filter as s -> tgt.filter as t then ValueSetComposeIncludeFilter(s, t);
  src.valueSet -> tgt.valueSet;
}

group ValueSetComposeIncludeConcept(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.display -> tgt.display;
  src.designation as s -> tgt.designation as t then ValueSetComposeIncludeConceptDesignation(s, t);
}

group ValueSetComposeIncludeConceptDesignation(source src, target tgt) extends BackboneElement {
  src.language -> tgt.language;
  src.use -> tgt.use;
  src.value -> tgt.value;
}

group ValueSetComposeIncludeFilter(source src, target tgt) extends BackboneElement {
  src.property -> tgt.property;
  src.op as v -> tgt.op = translate(v, 'http://hl7.org/fhir/uv/xver/ConceptMap/vsd.co.in.fi.op-4bto5', 'code');
  src.value -> tgt.value;
}

group ValueSetExpansion(source src, target tgt) extends BackboneElement {
  src.identifier -> tgt.identifier;
  src.timestamp -> tgt.timestamp;
  src.total -> tgt.total;
  src.offset -> tgt.offset;
  src.parameter as s -> tgt.parameter as t then ValueSetExpansionParameter(s, t);
  src.contains as s -> tgt.contains as t then ValueSetExpansionContains(s, t);
}

group ValueSetExpansionParameter(source src, target tgt) extends BackboneElement {
  src.name -> tgt.name;
  src.value : string -> tgt.value "valueString";
  src.value : boolean -> tgt.value "valueBoolean";
  src.value : integer -> tgt.value "valueInteger";
  src.value : decimal -> tgt.value "valueDecimal";
  src.value : uri -> tgt.value "valueUri";
  src.value : code -> tgt.value "valueCode";
  src.value : dateTime -> tgt.value "valueDateTime";
}

group ValueSetExpansionContains(source src, target tgt) extends BackboneElement {
  src.system -> tgt.system;
  src.abstract -> tgt.abstract;
  src.inactive -> tgt.inactive;
  src.version -> tgt.version;
  src.code -> tgt.code;
  src.display -> tgt.display;
  src.contains as s -> tgt.contains as t then ValueSetExpansionContains(s, t);
}

