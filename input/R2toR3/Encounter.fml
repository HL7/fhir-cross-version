/// url = "http://hl7.org/fhir/uv/xver/StructureMap/Encounter2to3"
/// name = "Encounter2to3"
/// title = "Encounter Transforms: R2 to R3"
/// status = "active"

uses "http://hl7.org/fhir/1.0/Encounter" alias EncounterR2 as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/Encounter" alias Encounter as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*2to3"

group Encounter(source src : EncounterR2, target tgt : Encounter) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier "Encounter_identifier";
  src.status -> tgt.status "Encounter_status";
  src.statusHistory as vs0 -> tgt.statusHistory as vt0 then encStatusHistory(vs0, vt0) "Encounter_statusHistory";
  src.class as v -> tgt.class = translate(v, 'http://hl7.org/fhir/uv/xver/ConceptMap/enc.class-2to3', 'Coding') "Encounter_class";
  src.type -> tgt.type "Encounter_type";
  src.priority -> tgt.priority "Encounter_priority";
  src.patient -> tgt.subject "Encounter_patient";
  src.episodeOfCare -> tgt.episodeOfCare "Encounter_episodeOfCare";
  src.incomingReferral -> tgt.incomingReferral "Encounter_incomingReferral";
  src.participant as vs0 -> tgt.participant as vt0 then encParticipant(vs0, vt0) "Encounter_participant";
  src.appointment -> tgt.appointment "Encounter_appointment";
  src.period -> tgt.period "Encounter_period";
  src.length as vs -> tgt.length as vt then QuantityToDuration(vs, vt) "Encounter_length";
  src.reason -> tgt.reason "Encounter_reason";
  src.indication as v ->  tgt.diagnosis as d,  d.condition = v "Encounter_indication";
  src.hospitalization as vs0 -> tgt.hospitalization as vt0 then encHospitalizationTypes(vs0, vt0, tgt) "Encounter_hospitalization";
  src.location as vs0 -> tgt.location as vt0 then encLocation(vs0, vt0) "Encounter_location";
  src.serviceProvider -> tgt.serviceProvider "Encounter_serviceProvider";
  src.partOf -> tgt.partOf "Encounter_partOf";
}

group encStatusHistory(source src, target tgt) extends BackboneElement {
  src.status -> tgt.status "statusHistory-status";
  src.period -> tgt.period "statusHistory-period";
}

group encParticipant(source src, target tgt) extends BackboneElement {
  src.type -> tgt.type "participant-type";
  src.period -> tgt.period "participant-period";
  src.individual -> tgt.individual "participant-individual";
}

group encHospitalizationTypes(source src, target tgt, target res) extends BackboneElement {
  src.preAdmissionIdentifier -> tgt.preAdmissionIdentifier "hospitalization-preAdmissionIdentifier";
  src.origin -> tgt.origin "hospitalization-origin";
  src.admitSource -> tgt.admitSource "hospitalization-admitSource";
  src.reAdmission -> tgt.reAdmission "hospitalization-reAdmission";
  src.dietPreference -> tgt.dietPreference "hospitalization-dietPreference";
  src.specialCourtesy -> tgt.specialCourtesy "hospitalization-specialCourtesy";
  src.specialArrangement -> tgt.specialArrangement "hospitalization-specialArrangement";
  src.destination -> tgt.destination "hospitalization-destination";
  src.dischargeDisposition -> tgt.dischargeDisposition "hospitalization-dischargeDisposition";
}

group encLocation(source src, target tgt) extends BackboneElement {
  src.location -> tgt.location "location-location";
  src.status -> tgt.status "location-status";
  src.period -> tgt.period "location-period";
}

