/// url = "http://hl7.org/fhir/uv/xver/StructureMap/CarePlan4to3"
/// name = "CarePlan4to3"
/// title = "CarePlan Transforms: R4 to R3"
/// status = "active"

uses "http://hl7.org/fhir/4.0/StructureDefinition/CarePlan" alias CarePlan as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/CarePlan" alias CarePlanR3 as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*4to3"

group CarePlan(source src : CarePlan, target tgt : CarePlanR3) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.instantiatesCanonical -> tgt.definition;
  src.basedOn -> tgt.basedOn;
  src.replaces -> tgt.replaces;
  src.partOf -> tgt.partOf;
  src.status -> tgt.status;
  src.intent -> tgt.intent;
  src.category -> tgt.category;
  src.title -> tgt.title;
  src.description -> tgt.description;
  src.subject -> tgt.subject;
  src.encounter -> tgt.context;
  src.period -> tgt.period;
  src.author -> tgt.author;
  src.careTeam -> tgt.careTeam;
  src.addresses -> tgt.addresses;
  src.supportingInfo -> tgt.supportingInfo;
  src.goal -> tgt.goal;
  src.activity as vs -> tgt.activity as vt then activity(vs, vt);
  src.note -> tgt.note;
}

group activity(source src, target tgt) extends BackboneElement {
  src.outcomeCodeableConcept -> tgt.outcomeCodeableConcept;
  src.outcomeReference -> tgt.outcomeReference;
  src.progress -> tgt.progress;
  src.reference -> tgt.reference;
  src.detail as vs -> tgt.detail as vt then detail(vs, vt);
}

group detail(source src, target tgt) extends BackboneElement {
  src.extension as e where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-CarePlan.activity.detail.category' then {
    e.value : CodeableConcept -> tgt.category;
  };
  src.instantiatesCanonical -> tgt.definition;
  src.code -> tgt.code;
  src.reasonCode -> tgt.reasonCode;
  src.reasonReference -> tgt.reasonReference;
  src.goal -> tgt.goal;
  src.status -> tgt.status;
  src.statusReason as s then {
    s.text -> tgt.statusReason;
  };
  src.doNotPerform -> tgt.prohibited;
  src.scheduled : Timing as s -> tgt.scheduled = create('Timing') as t then Timing(s, t) "scheduledTiming";
  src.scheduled : Period as s -> tgt.scheduled = create('Period') as t then Period(s, t) "scheduledPeriod";
  src.scheduled : string as s -> tgt.scheduled = create('string') as t then string(s, t) "scheduledString";
  src.location -> tgt.location;
  src.performer -> tgt.performer;
  src.product : CodeableConcept as s -> tgt.product = create('CodeableConcept') as t then CodeableConcept(s, t) "productCodeableConcept";
  src.product : Reference as s -> tgt.product = create('Reference') as t then Reference(s, t) "productReference";
  src.dailyAmount -> tgt.dailyAmount;
  src.quantity -> tgt.quantity;
  src.description -> tgt.description;
}

