/// url = "http://hl7.org/fhir/uv/xver/StructureMap/DocumentReference2to3"
/// name = "DocumentReference2to3"
/// title = "DocumentReference Transforms: R2 to R3"
/// status = "active"

uses "http://hl7.org/fhir/1.0/StructureDefinition/DocumentReference" alias DocumentReferenceR2 as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/DocumentReference" alias DocumentReference as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*2to3"

group DocumentReference(source src : DocumentReferenceR2, target tgt : DocumentReference) extends DomainResource <<type+>> {
  src.masterIdentifier -> tgt.masterIdentifier "DocumentReferenceMasterIdentifier";
  src.identifier -> tgt.identifier "DocumentReferenceIdentifier";
  src.subject -> tgt.subject "DocumentReferenceSubject";
  src.type -> tgt.type "DocumentReferenceType";
  src.class -> tgt.class "DocumentReferenceClass";
  src.author -> tgt.author "DocumentReferenceAuthor";
  src.custodian -> tgt.custodian "DocumentReferenceCustodian";
  src.authenticator -> tgt.authenticator "DocumentReferenceAuthenticator";
  src.created -> tgt.created "DocumentReferenceCreated";
  src.indexed -> tgt.indexed "DocumentReferenceIndexed";
  src.status -> tgt.status "DocumentReferenceStatus";
  src.docStatus as v then {
    v.coding as v1 where (v1.system = 'http://hl7.org/fhir/composition-status') -> tgt.docStatus = (v1.code) "DocumentReferenceDocStatusInner";
  } "DocumentReferenceDocStatus";
  src.relatesTo as vs0 -> tgt.relatesTo as vt0 then drRelatesTo(vs0, vt0) "DocumentReferenceRelatesTo";
  src.description -> tgt.description "DocumentReferenceDescription";
  src.securityLabel -> tgt.securityLabel "DocumentReferenceSecurityLabel";
  src.content as vs0 -> tgt.content as vt0 then drContent(vs0, vt0) "DocumentReferenceContent";
  src.context as vs0 -> tgt.context as vt0 then drContext(vs0, vt0) "DocumentReferenceContext";
}

group drRelatesTo(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code "relatesTo-code";
  src.target -> tgt.target "relatesTo-target";
}

group drContent(source src, target tgt) extends BackboneElement {
  src.attachment -> tgt.attachment "content-attachment";
  src.format -> tgt.format "content-format";
}

group drContext(source src, target tgt) extends BackboneElement {
  src.encounter -> tgt.encounter "context-encounter";
  src.event -> tgt.event "context-event";
  src.period -> tgt.period "context-period";
  src.facilityType -> tgt.facilityType "context-facilityType";
  src.practiceSetting -> tgt.practiceSetting "context-practiceSetting";
  src.sourcePatientInfo -> tgt.sourcePatientInfo "context-sourcePatientInfo";
  src.related as vs0 -> tgt.related as vt0 then drrelated(vs0, vt0) "context-related";
}

group drrelated(source src, target tgt) extends BackboneElement {
  src.identifier -> tgt.identifier "related-identifier";
  src.ref -> tgt.ref "related-ref";
}

