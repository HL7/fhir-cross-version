/// url = "http://hl7.org/fhir/StructureMap/HealthcareService3to2"
/// name = "HealthcareService3to2"
/// title = "HealthcareService Transforms: R3 to R2"
/// status = "active"

uses "http://hl7.org/fhir/3.0/HealthcareService" alias HealthcareService as source
uses "http://hl7.org/fhir/1.0/HealthcareService" alias HealthcareServiceR2 as target

imports "http://hl7.org/fhir/StructureMap/*3to2"

group HealthcareService(source src : HealthcareService, target tgt : HealthcareServiceR2) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier "HealthcareService-identifier";
  src.providedBy -> tgt.providedBy "HealthcareService-providedBy";
  src.category -> tgt.serviceCategory "HealthcareService-serviceCategory";
  src.type as vs ->  tgt.serviceType as vt,  vt.type as vt then CodeableConcept(vs, vt) "HealthcareService-serviceType";
  src.specialty as vs ->  tgt.serviceType as vt first,  vt.specialty as vt then CodeableConcept(vs, vt) "HealthcareService-speciality";
  src.location -> tgt.location "HealthcareService-location";
  src.name -> tgt.serviceName "HealthcareService-serviceName";
  src.comment -> tgt.comment "HealthcareService-comment";
  src.extraDetails -> tgt.extraDetails "HealthcareService-extraDetails";
  src.photo -> tgt.photo "HealthcareService-photo";
  src.telecom -> tgt.telecom "HealthcareService-telecom";
  src.coverageArea -> tgt.coverageArea "HealthcareService-coverageArea";
  src.serviceProvisionCode -> tgt.serviceProvisionCode "HealthcareService-serviceProvisionCode";
  src.eligibility -> tgt.eligibility "HealthcareService-eligibility";
  src.eligibilityNote -> tgt.eligibilityNote "HealthcareService-eligibilityNote";
  src.programName -> tgt.programName "HealthcareService-programName";
  src.characteristic -> tgt.characteristic "HealthcareService-characteristic";
  src.referralMethod -> tgt.referralMethod "HealthcareService-referralMethod";
  src.appointmentRequired -> tgt.appointmentRequired "HealthcareService-appointmentRequired";
  src.availableTime as vs0 -> tgt.availableTime as vt0 then hsvcAvailable(vs0, vt0) "HealthcareService-availableTime";
  src.notAvailable as vs0 -> tgt.notAvailable as vt0 then hsvcNotAvailable(vs0, vt0) "HealthcareService-notAvailable";
  src.availabilityExceptions -> tgt.availabilityExceptions "HealthcareService-availabilityExceptions";
}

group hsvcAvailable(source src, target tgt) extends BackboneElement {
  src.daysOfWeek -> tgt.daysOfWeek "availableTime-daysOfWeek";
  src.allDay -> tgt.allDay "availableTime-allDay";
  src.availableStartTime -> tgt.availableStartTime "availableTime-availableStartTime";
  src.availableEndTime -> tgt.availableEndTime "availableTime-availableEndTime";
}

group hsvcNotAvailable(source src, target tgt) extends BackboneElement {
  src.description -> tgt.description "notAvailable-description";
  src.during -> tgt.during "notAvailable-during";
}

