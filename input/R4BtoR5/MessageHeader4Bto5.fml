/// url = "http://hl7.org/fhir/uv/xver/StructureMap/MessageHeader4Bto5"
/// name = "MessageHeader4Bto5"
/// title = "MessageHeader Transforms: R4B to R5"
/// status = "active"

uses "http://hl7.org/fhir/4.3/MessageHeader" alias MessageHeaderR4B as source
uses "http://hl7.org/fhir/5.0/MessageHeader" alias MessageHeaderR5 as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*4Bto5"

group MessageHeader(source src : MessageHeaderR4B, target tgt : MessageHeaderR5) extends DomainResource <<type+>> {
  src.event : Coding -> tgt.event "eventCoding";
  src.event : uri -> tgt.event "eventUri";
  src.destination as s -> tgt.destination as t then MessageHeaderDestination(s, t);
  src.sender -> tgt.sender;
  src.author -> tgt.author;
  src.source as s -> tgt.source as t then MessageHeaderSource(s, t);
  src.responsible -> tgt.responsible;
  src.reason -> tgt.reason;
  src.response as s -> tgt.response as t then MessageHeaderResponse(s, t);
  src.focus -> tgt.focus;
  src.definition -> tgt.definition;
}

group MessageHeaderDestination(source src, target tgt) extends BackboneElement {
  src.endpoint : url -> tgt.endpoint "endpointUrl";
  src.name -> tgt.name;
  src.target -> tgt.target;
  src.receiver -> tgt.receiver;
}

group MessageHeaderSource(source src, target tgt) extends BackboneElement {
  src.endpoint : url -> tgt.endpoint "endpointUrl";
  src.name -> tgt.name;
  src.software -> tgt.software;
  src.version -> tgt.version;
  src.contact -> tgt.contact;
}

group MessageHeaderResponse(source src, target tgt) extends BackboneElement {
  src.identifier as s ->  tgt.identifier = create('Identifier') as t,  t.value = s;
  src.code as v -> tgt.code = translate(v, 'http://hl7.org/fhir/uv/xver/ConceptMap/msh.re.code-4bto5', 'code');
  src.details -> tgt.details;
}

