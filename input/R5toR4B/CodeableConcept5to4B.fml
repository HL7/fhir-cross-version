/// url = "http://hl7.org/fhir/uv/xver/StructureMap/CodeableConcept5to4b"
/// name = "CodeableConcept5to4b"
/// title = "CodeableConcept Transforms: R5 to R4B"
/// status = "active"

uses "http://hl7.org/fhir/4.3/CodeableConcept" alias CodeableConceptR4B as target
uses "http://hl7.org/fhir/4.3/CodeableReference" alias CodeableReferenceR4B as target
uses "http://hl7.org/fhir/4.3/Coding" alias CodingR4B as target
uses "http://hl7.org/fhir/4.3/code" alias codeR4B as target
uses "http://hl7.org/fhir/4.3/string" alias stringR4B as target
uses "http://hl7.org/fhir/5.0/CodeableConcept" alias CodeableConceptR5 as source
uses "http://hl7.org/fhir/5.0/CodeableReference" alias CodeableReferenceR5 as source
uses "http://hl7.org/fhir/5.0/Coding" alias CodingR5 as source
uses "http://hl7.org/fhir/5.0/code" alias codeR5 as source

imports "http://hl7.org/fhir/uv/xver/StructureMap/*5to4b"

group CodeableConcept(source src : CodeableConceptR5, target tgt : CodeableConceptR4B) extends Element <<type+>> {
  src.coding -> tgt.coding;
  src.text -> tgt.text;
}

group CodeableReference2CodeableConcept(source src : CodeableReferenceR5, target tgt : CodeableConceptR4B) extends Element <<types>> {
  src.concept as s -> tgt then CodeableConcept(s, tgt);
}

group CodeableReference2Coding(source src : CodeableReferenceR5, target tgt : CodingR4B) extends Element <<types>> {
  src.concept as s -> tgt then {
    s.coding as v -> tgt then Coding(v, tgt);
  };
}

group CodeableConcept2CodeableReference(source src : CodeableConceptR5, target tgt : CodeableReferenceR4B) extends Element <<types>> {
  src as s -> tgt.concept as t then CodeableConcept(s, t) "concept";
}

group CodeableConcept2string(source src : CodeableConceptR5, target tgt : stringR4B) extends Element <<types>> {
  src.text as v -> tgt.value = v "CodeableConcept2string";
}

group CodeableReference2string(source src : CodeableReferenceR5, target tgt : stringR4B) extends Element <<types>> {
  src.concept as s -> tgt as t then CodeableConcept2string(s, t);
}

group CodeableConcept2Coding(source src : CodeableConceptR5, target tgt : CodingR4B) extends Element <<types>> {
  src.coding as s -> tgt as t then Coding(s, t);
}

group Coding2CodeableConcept(source src : CodingR5, target tgt : CodeableConceptR4B) extends Element <<types>> {
  src as s -> tgt.coding as t then Coding(s, t) "Coding";
}

group CodeableConcept2code(source src : CodeableConceptR5, target tgt : codeR4B, source sysUrl : string) extends Element <<types>> {
  src.coding as s where s.system = sysUrl -> tgt then {
    s.code -> tgt.value;
  };
}

group code2CodeableConcept(source src : codeR5, target tgt : CodeableConceptR4B, source sysUrl : string) extends Element <<types>> {
  src.value as s ->  tgt.coding = create('Coding') as t,  t.system = sysUrl,  t.code = s;
}

