/// url = "http://hl7.org/fhir/uv/xver/StructureMap/ProcedureRequestDO3to2"
/// name = "ProcedureRequestDO3to2"
/// title = "DiagnosticOrder Transforms: R3 to R2"
/// status = "active"

uses "http://hl7.org/fhir/3.0/StructureDefinition/ProcedureRequest" alias ProcedureRequest as source
uses "http://hl7.org/fhir/1.0/StructureDefinition/DiagnosticOrder" alias DiagnosticOrderR2 as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*3to2"

// in R3, DiagnosticOrder is folded into ProcedureRequest, and there's no easy
// way to tell them apart. it requires special knowledge to decide to convert
// a procedure request back to a DiagnosticOrder, but they are marked with an
// extension in case this helps

group DiagnosticOrder(source src : ProcedureRequest, target tgt : DiagnosticOrderR2) extends DomainResource <<type+>> {
  src.subject -> tgt.subject "DiagnosticOrder_subject";
  src.requester as v then {
    v.agent -> tgt.orderer "DiagnosticOrder_orderer-inner";
  } "DiagnosticOrder_orderer";
  src.identifier -> tgt.identifier "DiagnosticOrder_identifier";
  src.context -> tgt.encounter "DiagnosticOrder_encounter";
  src.reasonCode -> tgt.reason "DiagnosticOrder_reason";
  src.supportingInfo -> tgt.supportingInformation "DiagnosticOrder_supportingInformation";
  src.status where src.intent = 'proposal' -> tgt.status = 'proposed' "DiagnosticOrder_status1";
  src.status where src.intent = 'plan' -> tgt.status = 'planned' "DiagnosticOrder_status2";
  src.status as v where (src.intent != 'proposal') and (src.intent != 'plan') -> tgt.status = translate(v, 'http://hl7.org/fhir/uv/xver/ConceptMap/pcrq.status-dgo.status-3to2', 'code') "DiagnosticOrder_status3";
  src.priority -> tgt.priority "DiagnosticOrder_priority";
  src where src.authoredOn.exists() or src.requester.exists() -> tgt.event as ev then doEvent(src, ev) "DiagnosticOrder_event";
  src where src.code.exists() -> tgt.item as it then doItem(src, it) "DiagnosticOrder_item";
  src.note -> tgt.note "DiagnosticOrder_note";
}

group doEvent(source src, target tgt) {
  src -> tgt.status = 'requested' "event-status";
  src.authoredOn -> tgt.dateTime "event-dateTime";
}

group doItem(source src, target tgt) {
  src.code -> tgt.code "item-code";
}

