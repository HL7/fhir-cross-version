/// url = "http://hl7.org/fhir/uv/xver/StructureMap/CodeableConcept2to3"
/// name = "CodeableConcept2to3"
/// title = "CodeableConcept Transforms: R2 to R3"
/// status = "active"

uses "http://hl7.org/fhir/1.0/StructureDefinition/CodeableConcept" alias CodeableConceptR2 as source
uses "http://hl7.org/fhir/1.0/StructureDefinition/Coding" alias CodingR2 as source
uses "http://hl7.org/fhir/1.0/StructureDefinition/string" alias stringR2 as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/CodeableConcept" alias CodeableConcept as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/primitives2to3"
imports "http://hl7.org/fhir/uv/xver/StructureMap/Element2to3"
imports "http://hl7.org/fhir/uv/xver/StructureMap/Coding2to3"

group CodeableConcept(source src : CodeableConceptR2, target tgt : CodeableConcept) extends Element <<type+>> {
  src.coding -> tgt.coding "CodeableConcept-coding";
  src.text -> tgt.text "CodeableConcept-text";
}

group CodingToCodeableConcept(source src : CodingR2, target tgt : CodeableConcept) extends Element <<types>> {
  src -> tgt.coding as vt then Coding(src, vt) "CodingToCodeableConcept-coding";
}

group CodeableConceptToCoding(source src : CodeableConceptR2, target tgt : Coding) extends Element <<types>> {
  src.coding only_one as vs then Coding(vs, tgt) "CodeableConcept-coding";
}

group stringToCodeableConcept(source src : stringR2, target tgt : CodeableConcept) extends Element <<types>> {
  src -> tgt.text as vt then string(src, vt) "stringToCodeableConcept-text";
}

