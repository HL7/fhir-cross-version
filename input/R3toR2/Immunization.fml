/// url = "http://hl7.org/fhir/uv/xver/StructureMap/Immunization3to2"
/// name = "Immunization3to2"
/// title = "Immunization Transforms: R3 to R2"
/// status = "active"

uses "http://hl7.org/fhir/3.0/StructureDefinition/Immunization" alias Immunization as source
uses "http://hl7.org/fhir/1.0/Immunization" alias ImmunizationR2 as target

imports "http://hl7.org/fhir/uv/xver/StructureMap/*3to2"

group Immunization(source src : Immunization, target tgt : ImmunizationR2) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier "Immunization_identifier";
  src.status -> tgt.status "Immunization_status";
  src.date -> tgt.date "Immunization_date";
  src.vaccineCode -> tgt.vaccineCode "Immunization_vaccineCode";
  src.patient -> tgt.patient "Immunization_patient";
  src.notGiven -> tgt.wasNotGiven "Immunization_wasNotGiven";
  src.practitioner as v where v.role.coding.code.contains('AP') then {
    v.actor -> tgt.performer "Immunization_performer-inner";
  } "Immunization_performer";
  src.practitioner as v where v.role.coding.code.contains('OP') then {
    v.actor -> tgt.requester "Immunization_requester-inner";
  } "Immunization_requester";
  src.encounter -> tgt.encounter "Immunization_encounter";
  src.manufacturer -> tgt.manufacturer "Immunization_manufacturer";
  src.location -> tgt.location "Immunization_location";
  src.lotNumber -> tgt.lotNumber "Immunization_lotNumber";
  src.expirationDate -> tgt.expirationDate "Immunization_expirationDate";
  src.site -> tgt.site "Immunization_site";
  src.route -> tgt.route "Immunization_route";
  src.doseQuantity -> tgt.doseQuantity "Immunization_doseQuantity";
  src.note -> tgt.note "Immunization_note";
  src.explanation as vs0 -> tgt.explanation as vt0 then immExplanation(vs0, vt0) "Immunization_explanation";
  src.reaction as vs0 -> tgt.reaction as vt0 then immReaction(vs0, vt0) "Immunization_reaction";
  src.vaccinationProtocol as vs0 -> tgt.vaccinationProtocol as vt0 then immProtocol(vs0, vt0) "Immunization_vaccinationProtocol";
}

group immExplanation(source src, target tgt) extends BackboneElement {
  src.reason -> tgt.reason "explanation-reason";
  src.reasonNotGiven -> tgt.reasonNotGiven "explanation-reasonNotGiven";
}

group immReaction(source src, target tgt) extends BackboneElement {
  src.date -> tgt.date "reaction-date";
  src.detail -> tgt.detail "reaction-detail";
  src.reported -> tgt.reported "reaction-reported";
}

group immProtocol(source src, target tgt) extends BackboneElement {
  src.doseSequence -> tgt.doseSequence "vaccinationProtocol_doseSequence";
  src.description -> tgt.description "vaccinationProtocol_description";
  src.authority -> tgt.authority "vaccinationProtocol_authority";
  src.series -> tgt.series "vaccinationProtocol_series";
  src.seriesDoses -> tgt.seriesDoses "vaccinationProtocol_seriesDoses";
  src.targetDisease -> tgt.targetDisease "vaccinationProtocol_targetDisease";
  src.doseStatus -> tgt.doseStatus "vaccinationProtocol_doseStatus";
  src.doseStatusReason -> tgt.doseStatusReason "vaccinationProtocol_doseStatusReason";
}

